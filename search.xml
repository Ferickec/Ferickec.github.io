<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用Hexo自建博客过程（一）</title>
      <link href="/2023/02/19/%E4%BD%BF%E7%94%A8Hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/02/19/%E4%BD%BF%E7%94%A8Hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="首次自建Hexo博客（本博客的博客搭建主要学习Fomalhaut该博主，我为初次尝试）"><a href="#首次自建Hexo博客（本博客的博客搭建主要学习Fomalhaut该博主，我为初次尝试）" class="headerlink" title="首次自建Hexo博客（本博客的博客搭建主要学习Fomalhaut该博主，我为初次尝试）"></a>首次自建Hexo博客（本博客的博客搭建主要学习<a href="https://www.fomal.cc/posts/e593433d.html">Fomalhaut</a>该博主，我为初次尝试）</h1><h2 id="使用工具的安装（现在只知道windows）"><a href="#使用工具的安装（现在只知道windows）" class="headerlink" title="使用工具的安装（现在只知道windows）"></a>使用工具的安装（现在只知道windows）</h2><p>使用工具：Node，Git, Vscode<br>GitHub账号<br>域名（可选）</p><h2 id="1-安装Node和Git"><a href="#1-安装Node和Git" class="headerlink" title="1.安装Node和Git"></a>1.安装Node和Git</h2><p>1.Node各个历史版本 <a href="https://nodejs.org/en/download/releases/">https://nodejs.org/en/download/releases/</a> （若无法安装，尝试选择低版本）<br>2.下载后安装，若无其他情况可一路下一步安装，如果想要改变安装路径，请自行研究<br>3.检查是否安装成功，按win+R后输入cmd，在cmd中执行一下指令，看到版本信息即为安装成功。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>4.Git官方地址 <a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> 若下载太慢可到 <a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a>  镜像网站下载，安装方式一路下一步或自行研究<br>5.Node中npm默认下载服务器在国外，因此将下载源改变，在cmd窗口中运行以下指令，改为淘宝镜像源</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="2-在-Node-中安装-Hexo"><a href="#2-在-Node-中安装-Hexo" class="headerlink" title="2.在 Node 中安装 Hexo"></a>2.在 Node 中安装 Hexo</h2><p>1.在cmd中输入以下命令进行安装</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>2.接着在cmd中输入hexo -v出现信息安装成功</p><h2 id="3-Git-的初始化"><a href="#3-Git-的初始化" class="headerlink" title="3.Git 的初始化"></a>3.Git 的初始化</h2><p>1.安装完Git后会有Git CMD（windows命令行的指令风格）,Git Bash（linux系统的指令风格），Git GUI（图形化界面）</p><p>2.常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><p>3.在 Git Bash 中初始化用户名和邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>4.接着运行 git config -l 检查配置，在后两行出现用户名和邮箱即为配置成功</p><h2 id="4-Github创建仓库"><a href="#4-Github创建仓库" class="headerlink" title="4.Github创建仓库"></a>4.Github创建仓库</h2><p>1.GitHub 账号自行注册 <a href="https://github.com/">https://github.com/</a> 点击进入<br>2.在 GitHub 中右上角加号 + 中点击 New repository 进入，Repository name 一栏必须为 &lt;用户名&gt;.github.io ，然后 Pubulic 勾选（必须），其他可自行选择，最后点击 create repository 创建仓库。</p><h2 id="5-将Git连接至GitHub"><a href="#5-将Git连接至GitHub" class="headerlink" title="5.将Git连接至GitHub"></a>5.将Git连接至GitHub</h2><p>1.在 Git Bash 中执行以下命令生成 ssh 公钥，用于连接 GitHub</p><figure class="highlight plaintext"><figcaption><span>Bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>之后打开 C:/用户/用户名/.ssh 文件夹，用记事本打开 id_rsa.pub 文件，将里面的内容全部复制。</p><p>2.打开 GitHub，点击右上角头像，选择 settings ，再选择 SSH and keys ，随意起个名字，将刚才复制的内容粘贴到 key 一栏中，最后点击Add SSH key。</p><p>3.测试连接，在 Git Bash 中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>若在最后一行出现你的 GitHub 账号名，并提示成功，就说明完成。</p><h2 id="6-初始化-Hexo"><a href="#6-初始化-Hexo" class="headerlink" title="6.初始化 Hexo"></a>6.初始化 Hexo</h2><p>1.新建一个文件夹存放博客文件（我选的为【C:\Blog】），然后再目标路径打开 cmd 窗口，执行初始化项目。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-<span class="number">1</span>(项目名)</span><br></pre></td></tr></table></figure><p>2.接着先进入项目文件，输入以下命令，安装相关依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog-demo  //进入blog-1文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>3.初始化后有以下文件：<br>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息</p><p>4.输入 hexo server 或者 hexo s 启动项目，在浏览器中输入地址 <a href="http://localhost:4000/">http://localhost:4000/</a> 就能看到博客搭建完成。</p><h2 id="7-将静态博客挂载到-GitHub-Pages"><a href="#7-将静态博客挂载到-GitHub-Pages" class="headerlink" title="7.将静态博客挂载到 GitHub Pages"></a>7.将静态博客挂载到 GitHub Pages</h2><p>1.在 Git Bash 安装 hexo-deployer-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>2.修改 _config.yml 文件<br>在 blog-demo 目录下的 _config.yml，在最后一段 deploy 中进行配置（注意缩进）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:&lt;你的GitHub名称&gt;/&lt;你的GitHub名称&gt;.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>3.改好配置后，运行如下命令，将项目部署到GitHub。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  // Git BASH终端</span><br><span class="line">hexo clean; hexo generate; hexo deploy  // VSCODE终端</span><br></pre></td></tr></table></figure><p>注意：若在配置 Git 时设置密码，则deploy时可能要你输入 username 和 password。</p><p>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。<br>hexo generate：生成静态文章，可以用 hexo g 缩写<br>hexo deploy：部署文章，可以用 hexo d 缩写</p><p>4.进入 GitHub 刚创建的仓库，就会发现已经出现你刚部署好的文件，等待库名上的黄点变为对号的时候就证明，连接完成。</p><p>5.这时打开浏览器访问：<a href="https://fomalhaut-blog.github.io/">https://Fomalhaut-Blog.github.io</a> 就能看到博客了。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo butterfly </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown文件编写方法</title>
      <link href="/2023/02/17/markdown%E6%96%87%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/17/markdown%E6%96%87%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。</p><p>文中每一个标题都是一个简短的语法，保证很短时间就能学会。</p><p>更详细请访问 <a href="https://markdown.com.cn/basic-syntax/">markdown官方教程</a>。</p><h1 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h1><ul><li>在标题前添加（ # ）来代表标题级别，例如【# 标题】。</li><li>此外，【# 标题】为一级标题，【## 标题】为二级标题，以此类推，在标题前有几个 # 号即为几级标题，标题显示大小从一级标题往后逐渐变小。</li><li>还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 – 号来标识二级标题。</li><li>注意：在 # 与标题之间需要有一个空格。</li></ul><h1 id="换行语法"><a href="#换行语法" class="headerlink" title="换行语法"></a>换行语法</h1><p>在需要换行处后面添加两个或多个空格，然后按回车键,即可创建一个换行(<code>&lt;br&gt;</code>)。<br>此外的一些换行方式有些编辑器可能不兼容就不多赘述。</p><h1 id="段落语法"><a href="#段落语法" class="headerlink" title="段落语法"></a>段落语法</h1><p>在两个段落中间用一个空行来区分两个段落，另外需要注意的是不要用空格（<code>spaces</code>）或制表符（<code>tabs</code>）缩进段落。</p><h1 id="强调语法"><a href="#强调语法" class="headerlink" title="强调语法"></a>强调语法</h1><ul><li>粗体（Bold）：<code>**内容**</code>，<strong>粗体</strong></li><li>斜体（Italic）：<code>*内容*</code>，<em>斜体</em></li><li>粗斜体（Bold 和 Italic）：<code>***内容***</code> ，<em><strong>粗斜体</strong></em></li></ul><p>注意：在<code>*</code>之间不要加空格</p><h1 id="转义字符语法"><a href="#转义字符语法" class="headerlink" title="转义字符语法"></a>转义字符语法</h1><p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \ 。</p><p><strong>可做转义的字符:</strong><br>| 字符   | 名字   |<br>|——|——|<br>| \    | 反斜线  |<br>| `    |  反引号 |<br>| *    | 星号   |<br>| ——   | 下划线  |<br>| { }  | 大括号  |<br>|  [ ] | 中括号  |<br>| ( )  | 括号   |<br>| #    | 井号   |<br>| +    | 加号   |<br>| -    | 减号   |<br>| .    | 点    |<br>| !    | 叹号   |<br>| |    | 管道符  |</p><h1 id="引用语法"><a href="#引用语法" class="headerlink" title="引用语法"></a>引用语法</h1><p>要创建块引用，请在段落前添加一个<code>&gt;</code>符号。</p><blockquote><p>需要引用的内容</p></blockquote><p>嵌套引用使用<code>&gt;&gt;</code></p><blockquote><p>需要引用的内容</p><blockquote><p>嵌套引用的内容</p></blockquote></blockquote><p>在块引用中的内容依旧适用于markdown中的语法，比如标题，段落，换行，列表等操作。</p><h1 id="列表语法"><a href="#列表语法" class="headerlink" title="列表语法"></a>列表语法</h1><h2 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h2><p>创建列表使用 <code>-</code>  <code>空格</code> <code>内容</code> ，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 内容一</span><br><span class="line">- 内容二</span><br><span class="line">- 内容三</span><br></pre></td></tr></table></figure><ul><li>内容一</li><li>内容一</li><li>内容三</li></ul><p>*在列表中嵌套其他元素：<br>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 项目一</span><br><span class="line">- 项目二</span><br><span class="line">    额外内容</span><br><span class="line">- 项目三</span><br></pre></td></tr></table></figure><ul><li>项目一</li><li>项目二<br>  额外内容</li><li>项目三</li></ul><h2 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h2><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点【<code>数字.</code>】。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.内容    1.内容</span><br><span class="line">2.内容    3.内容</span><br><span class="line">3.内容    4.内容</span><br></pre></td></tr></table></figure><p>1.内容<br>2.内容<br>3.内容</p><h1 id="代码语法"><a href="#代码语法" class="headerlink" title="代码语法"></a>代码语法</h1><p>要将单词或短语表示为代码，请将其包裹在反引号 ( ` ) 中。</p><p>`内容` ：  <code>内容</code></p><p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(``)中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``使用 `xxx`在文件中``</span><br></pre></td></tr></table></figure><p><code>使用 `xxx`在文件中</code></p><p><strong>代码块</strong>：使用【``` （换行）内容 （换行）```】</p><h1 id="分隔线语法"><a href="#分隔线语法" class="headerlink" title="分隔线语法"></a>分隔线语法</h1><p>要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) [在文字下方会形成标题，或下划线 (___) ，并且不能包含其他内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">_________________</span><br></pre></td></tr></table></figure><p>以上三个分隔线的渲染效果看起来都一样：</p><hr><h1 id="表格语法"><a href="#表格语法" class="headerlink" title="表格语法"></a>表格语法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h1 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h1><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。</p><p>超链接Markdown语法代码：[超链接显示名](超链接地址 “超链接title”)<br>例如：</p><ul><li>[百度](<a href="https://baidu.com/">https://baidu.com/</a> “百度搜索引擎”)</li><li><a href="https://baidu.com/" title="百度搜索引擎">百度</a></li></ul><p>此外还可以使用引用类型链接的方式来使得添加的超链接方便管理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[baidu_id]:https://baidu.com/ &quot;百度搜索引擎&quot;</span><br><span class="line">[百度][baidu_id]</span><br></pre></td></tr></table></figure><p><a href="https://baidu.com/" title="百度搜索引擎">百度</a></p><p>网址和Email地址:<br>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。不过在很多编辑器中，会自动将其渲染成链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://markdown.com.cn&gt;</span><br><span class="line">&lt;fake@example.com&gt;</span><br></pre></td></tr></table></figure><p><a href="https://markdown.com.cn/">https://markdown.com.cn</a><br><a href="mailto:&#x66;&#97;&#107;&#x65;&#64;&#101;&#120;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#109;">&#x66;&#97;&#107;&#x65;&#64;&#101;&#120;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a></p><h1 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h1><p>要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p><p>插入图片Markdown语法代码：![图片alt](图片链接 “图片title”)。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](/source/img/index-1.png &quot;图片title&quot;)</span><br></pre></td></tr></table></figure><p><img src="/source/img/index-1.png" alt="图片alt" title="图片title"></p><p><strong>链接图片</strong>:<br>给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。<br><code>[![图片alt](/source/img/index-1.png &quot;图片title&quot;)](https://ferickec.github.io/)</code><br><a href="https://ferickec.github.io/"><img src="/source/img/index-1.png" alt="图片alt" title="图片title"></a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>模板</title>
      <link href="/2023/02/17/%E6%A8%A1%E6%9D%BF/"/>
      <url>/2023/02/17/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2023/02/17/%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/02/17/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次试试写一个100以内数字相加python程序"><a href="#第一次试试写一个100以内数字相加python程序" class="headerlink" title="第一次试试写一个100以内数字相加python程序"></a>第一次试试写一个100以内数字相加python程序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sun=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">sum</span> + x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>行了，第一次就小小地测试一下</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
